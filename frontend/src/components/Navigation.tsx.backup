// components/Navigation.tsx
import React, { useState } from 'react';
import { Link, useLocation } from 'react-router-dom';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import {
  NavigationMenu,
  NavigationMenuContent,
  NavigationMenuItem,
  NavigationMenuLink,
  NavigationMenuList,
  NavigationMenuTrigger,
} from '@/components/ui/navigation-menu';
import {
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuSeparator,
  DropdownMenuTrigger,
} from '@/components/ui/dropdown-menu';
import { useAuth } from '@/hooks/useAuth';
import BrainLogo, { BrainIcon } from './BrainLogo';
import {
  Menu,
  X,
  User,
  Settings,
  LogOut,
  Crown,
  Flame,
  Brain,
  Wand2,
  FileText,
  BarChart3,
  Target,
  Sparkles,
  ChevronDown,
  Home,
  Dashboard,
  HelpCircle
} from 'lucide-react';

interface NavigationProps {
  user?: any;
  onAuthAction?: () => void;
}

export default function Navigation({ user, onAuthAction }: NavigationProps) {
  const { isAuthenticated, logout } = useAuth();
  const location = useLocation();
  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);

  const navigationItems = [
    {
      title: 'Create',
      items: [
        {
          title: 'AI Prompt Builder',
          href: '/create',
          description: 'Build intelligent prompts with AI assistance',
          icon: <Wand2 className="w-4 h-4" />
        },
        {
          title: 'Smart Categories',
          href: '/categories',
          description: 'Guided questionnaires by specialty',
          icon: <Target className="w-4 h-4" />
        },
        {
          title: 'Quick Start',
          href: '/quick-start',
          description: 'Get started with templates',
          icon: <Sparkles className="w-4 h-4" />
        }
      ]
    },
    {
      title: 'Explore',
      items: [
        {
          title: 'Template Library',
          href: '/templates',
          description: 'Browse 200+ expert templates',
          icon: <FileText className="w-4 h-4" />
        },
        {
          title: 'Trending',
          href: '/trending',
          description: 'Popular prompts this week',
          icon: <Flame className="w-4 h-4" />
        },
        {
          title: 'Marketplace',
          href: '/marketplace',
          description: 'Share and discover prompts',
          icon: <Crown className="w-4 h-4" />
        }
      ]
    },
    {
      title: 'Analytics',
      items: [
        {
          title: 'Dashboard',
          href: '/analytics',
          description: 'Performance insights',
          icon: <BarChart3 className="w-4 h-4" />
        },
        {
          title: 'Usage Tracker',
          href: '/usage',
          description: 'Monitor your activity',
          icon: <BarChart3 className="w-4 h-4" />
        },
        {
          title: 'Reports',
          href: '/reports',
          description: 'Detailed analytics',
          icon: <FileText className="w-4 h-4" />
        }
      ]
    }
  ];

  const handleLogout = () => {
    logout();
    setIsMobileMenuOpen(false);
  };

  const isActivePath = (path: string) => {
    return location.pathname === path || location.pathname.startsWith(path + '/');
  };

  return (
    <nav className="bg-white border-b border-gray-200 shadow-sm sticky top-0 z-50">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="flex justify-between items-center h-16">
          {/* Logo */}
          <div className="flex items-center gap-2">
            <Link to="/" className="flex items-center gap-2 group">
              <div className="w-8 h-8">
                <BrainLogo size={32} variant="gradient" />
              </div>
              <span className="text-xl font-bold bg-gradient-to-r from-indigo-600 to-purple-600 bg-clip-text text-transparent group-hover:from-purple-600 group-hover:to-indigo-600 transition-all">
                SmartPromptIQ
              </span>
            </Link>
            <Badge variant="outline" className="ml-2 text-xs">
              Beta
            </Badge>
          </div>

          {/* Desktop Navigation */}
          <div className="hidden md:flex items-center space-x-8">
            {isAuthenticated ? (
              <>
                {/* Quick Links */}
                <Link
                  to="/dashboard"
                  className={`flex items-center gap-2 px-3 py-2 rounded-md text-sm font-medium transition-colors ${
                    isActivePath('/dashboard')
                      ? 'bg-indigo-50 text-indigo-700'
                      : 'text-gray-600 hover:text-gray-900 hover:bg-gray-50'
                  }`}
                >
                  <Dashboard className="w-4 h-4" />
                  Dashboard
                </Link>

                {/* Navigation Menu */}
                <NavigationMenu>
                  <NavigationMenuList>
                    {navigationItems.map((section) => (
                      <NavigationMenuItem key={section.title}>
                        <NavigationMenuTrigger className="text-gray-600 hover:text-gray-900">
                          {section.title}
                        </NavigationMenuTrigger>
                        <NavigationMenuContent>
                          <div className="grid gap-3 p-6 md:w-[400px] lg:w-[500px]">
                            {section.items.map((item) => (
                              <NavigationMenuLink key={item.href} asChild>
                                <Link
                                  to={item.href}
                                  className={`block select-none space-y-1 rounded-md p-3 leading-none no-underline outline-none transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground ${
                                    isActivePath(item.href) ? 'bg-indigo-50 text-indigo-700' : ''
                                  }`}
                                >
                                  <div className="flex items-center gap-2">
                                    {item.icon}
                                    <div className="text-sm font-medium leading-none">
                                      {item.title}
                                    </div>
                                  </div>
                                  <p className="line-clamp-2 text-sm leading-snug text-muted-foreground">
                                    {item.description}
                                  </p>
                                </Link>
                              </NavigationMenuLink>
                            ))}
                          </div>
                        </NavigationMenuContent>
                      </NavigationMenuItem>
                    ))}
                  </NavigationMenuList>
                </NavigationMenu>
              </>
            ) : (
              // Non-authenticated navigation
              <div className="flex items-center space-x-6">
                <Link
                  to="/features"
                  className="text-gray-600 hover:text-gray-900 text-sm font-medium"
                >
                  Features
                </Link>
                <Link
                  to="/pricing"
                  className="text-gray-600 hover:text-gray-900 text-sm font-medium"
                >
                  Pricing
                </Link>
                <Link
                  to="/docs"
                  className="text-gray-600 hover:text-gray-900 text-sm font-medium"
                >
                  Docs
                </Link>
              </div>
            )}
          </div>

          {/* Right Section */}
          <div className="hidden md:flex items-center gap-4">
            {isAuthenticated ? (
              <>
                {/* User Stats */}
                <div className="flex items-center gap-3">
                  <Badge className="bg-orange-100 text-orange-800">
                    <Flame className="w-3 h-3 mr-1" />
                    7 Day Streak
                  </Badge>
                  <Badge className="bg-indigo-100 text-indigo-800">
                    <Crown className="w-3 h-3 mr-1" />
                    Level 8
                  </Badge>
                </div>

                {/* User Menu */}
                <DropdownMenu>
                  <DropdownMenuTrigger asChild>
                    <Button variant="ghost" className="relative h-8 w-8 rounded-full">
                      <div className="h-8 w-8 rounded-full bg-gradient-to-r from-indigo-500 to-purple-600 flex items-center justify-center text-white font-medium">
                        {user?.firstName?.[0] || user?.email?.[0] || 'U'}
                      </div>
                    </Button>
                  </DropdownMenuTrigger>
                  <DropdownMenuContent className="w-56" align="end" forceMount>
                    <div className="flex items-center justify-start gap-2 p-2">
                      <div className="flex flex-col space-y-1 leading-none">
                        <p className="text-sm font-medium">
                          {user?.firstName} {user?.lastName}
                        </p>
                        <p className="w-[200px] truncate text-xs text-muted-foreground">
                          {user?.email}
                        </p>
                      </div>
                    </div>
                    <DropdownMenuSeparator />
                    <DropdownMenuItem asChild>
                      <Link to="/profile" className="cursor-pointer">
                        <User className="mr-2 h-4 w-4" />
                        Profile
                      </Link>
                    </DropdownMenuItem>
                    <DropdownMenuItem asChild>
                      <Link to="/settings" className="cursor-pointer">
                        <Settings className="mr-2 h-4 w-4" />
                        Settings
                      </Link>
                    </DropdownMenuItem>
                    <DropdownMenuItem asChild>
                      <Link to="/billing" className="cursor-pointer">
                        <Crown className="mr-2 h-4 w-4" />
                        Billing
                      </Link>
                    </DropdownMenuItem>
                    <DropdownMenuSeparator />
                    <DropdownMenuItem 
                      onClick={handleLogout}
                      className="cursor-pointer text-red-600 focus:text-red-600"
                    >
                      <LogOut className="mr-2 h-4 w-4" />
                      Log out
                    </DropdownMenuItem>
                  </DropdownMenuContent>
                </DropdownMenu>
              </>
            ) : (
              <div className="flex items-center gap-3">
                <Button variant="ghost" asChild>
                  <Link to="/login">Sign In</Link>
                </Button>
                <Button asChild>
                  <Link to="/signup">
                    <BrainIcon size={16} className="mr-2" />
                    Get Started
                  </Link>
                </Button>
              </div>
            )}
          </div>

          {/* Mobile menu button */}
          <div className="md:hidden">
            <Button
              variant="ghost"
              size="sm"
              onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}
            >
              {isMobileMenuOpen ? (
                <X className="h-6 w-6" />
              ) : (
                <Menu className="h-6 w-6" />
              )}
            </Button>
          </div>
        </div>

        {/* Mobile Navigation */}
        {isMobileMenuOpen && (
          <div className="md:hidden border-t border-gray-200">
            <div className="px-2 pt-2 pb-3 space-y-1">
              {isAuthenticated ? (
                <>
                  <Link
                    to="/dashboard"
                    className="block px-3 py-2 rounded-md text-base font-medium text-gray-700 hover:text-gray-900 hover:bg-gray-50"
                    onClick={() => setIsMobileMenuOpen(false)}
                  >
                    Dashboard
                  </Link>
                  <Link
                    to="/create"
                    className="block px-3 py-2 rounded-md text-base font-medium text-gray-700 hover:text-gray-900 hover:bg-gray-50"
                    onClick={() => setIsMobileMenuOpen(false)}
                  >
                    Create Prompt
                  </Link>
                  <Link
                    to="/templates"
                    className="block px-3 py-2 rounded-md text-base font-medium text-gray-700 hover:text-gray-900 hover:bg-gray-50"
                    onClick={() => setIsMobileMenuOpen(false)}
                  >
                    Templates
                  </Link>
                  <Link
                    to="/categories"
                    className="block px-3 py-2 rounded-md text-base font-medium text-gray-700 hover:text-gray-900 hover:bg-gray-50"
                    onClick={() => setIsMobileMenuOpen(false)}
                  >
                    Categories
                  </Link>
                  <Link
                    to="/analytics"
                    className="block px-3 py-2 rounded-md text-base font-medium text-gray-700 hover:text-gray-900 hover:bg-gray-50"
                    onClick={() => setIsMobileMenuOpen(false)}
                  >
                    Analytics
                  </Link>
                  <div className="border-t border-gray-200 pt-4">
                    <div className="px-3 py-2">
                      <p className="text-sm font-medium text-gray-900">
                        {user?.firstName} {user?.lastName}
                      </p>
                      <p className="text-sm text-gray-500">{user?.email}</p>
                    </div>
                    <Link
                      to="/settings"
                      className="block px-3 py-2 rounded-md text-base font-medium text-gray-700 hover:text-gray-900 hover:bg-gray-50"
                      onClick={() => setIsMobileMenuOpen(false)}
                    >
                      Settings
                    </Link>
                    <Button
                      variant="ghost"
                      className="w-full justify-start px-3 py-2 text-base font-medium text-red-600 hover:text-red-600 hover:bg-red-50"
                      onClick={handleLogout}
                    >
                      Sign Out
                    </Button>
                  </div>
                </>
              ) : (
                <>
                  <Link
                    to="/features"
                    className="block px-3 py-2 rounded-md text-base font-medium text-gray-700 hover:text-gray-900 hover:bg-gray-50"
                    onClick={() => setIsMobileMenuOpen(false)}
                  >
                    Features
                  </Link>
                  <Link
                    to="/pricing"
                    className="block px-3 py-2 rounded-md text-base font-medium text-gray-700 hover:text-gray-900 hover:bg-gray-50"
                    onClick={() => setIsMobileMenuOpen(false)}
                  >
                    Pricing
                  </Link>
                  <Link
                    to="/docs"
                    className="block px-3 py-2 rounded-md text-base font-medium text-gray-700 hover:text-gray-900 hover:bg-gray-50"
                    onClick={() => setIsMobileMenuOpen(false)}
                  >
                    Documentation
                  </Link>
                  <div className="border-t border-gray-200 pt-4 space-y-2">
                    <Button asChild className="w-full">
                      <Link to="/login" onClick={() => setIsMobileMenuOpen(false)}>
                        Sign In
                      </Link>
                    </Button>
                    <Button variant="outline" asChild className="w-full">
                      <Link to="/signup" onClick={() => setIsMobileMenuOpen(false)}>
                        Get Started
                      </Link>
                    </Button>
                  </div>
                </>
              )}
            </div>
          </div>
        )}
      </div>
    </nav>
  );
}